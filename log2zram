#!/bin/bash

. /etc/log2zram.conf


ZRAM_LOG=/var/log
ZSHARE=/usr/local/share/log2zram
ZLOG=${ZSHARE}/log/zram-config.log


createZramLogDrive () {
	# Check Zram Class created
	if modprobe --verbose --first-time zram; then
		ZRAM_DEV='0'
	else
		ZRAM_DEV=$(cat /sys/class/zram-control/hot_add)
	fi
	echo ${COMP_ALG} > /sys/block/zram${ZRAM_DEV}/comp_algorithm
	echo ${LOG_DISK_SIZE} > /sys/block/zram${ZRAM_DEV}/disksize
	echo ${SIZE} > /sys/block/zram${ZRAM_DEV}/mem_limit
	mke2fs -v -t ext4 $MKFS_OPTS /dev/zram${ZRAM_DEV} >>${ZLOG} 2>&1 || return 1
}


case "$1" in
	start)
		echo "log2zram start $(date +%Y-%m-%d-%H:%M:%S)" >>${ZLOG}
		invoke-rc.d rsyslog stop >>${ZLOG} 2>&1 || exit 1
		mkdir -p $HDD_LOG  >>${ZLOG} 2>&1 || exit 1
		mount --verbose --bind $ZRAM_LOG/ $HDD_LOG/ >>${ZLOG} 2>&1 || exit 1
		mount --verbose --make-private $HDD_LOG/ >>${ZLOG} 2>&1 || exit 1
		createZramLogDrive >>${ZLOG} 2>&1 || exit 1
		mkdir -vp ${ZDIR}/zram${ZRAM_DEV} >>${ZLOG} 2>&1 || exit 1
		mount --verbose --types ext4 $MNT_OPTS /dev/zram${ZRAM_DEV} ${ZDIR}/zram${ZRAM_DEV}/ >>${ZLOG} 2>&1 || exit 1
		mkdir -vp ${ZDIR}/zram${ZRAM_DEV}/upper ${ZDIR}/zram${ZRAM_DEV}/workdir ${TARGET_DIR} >>${ZLOG} 2>&1 || exit 1
		mount --verbose --types overlay -o redirect_dir=off,lowerdir=${ZDIR}${BIND_DIR},upperdir=${ZDIR}/zram${ZRAM_DEV}/upper,workdir=${ZDIR}/zram${ZRAM_DEV}/workdir overlay${ZRAM_DEV} ${ZRAM_LOG} >>${ZLOG} 2>&1 || exit 1
		echo "/zram${ZRAM_DEV}" > ${ZSHARE}/zram-device-list
		invoke-rc.d rsyslog restart >>${ZLOG} 2>&1 || exit 1
		;;

	stop)
		echo "log2zram stop $(date +%Y-%m-%d-%H:%M:%S)" >>${ZLOG}
		ZRAM_DEV=$(cat ${ZSHARE}/zram-device-list)
		invoke-rc.d rsyslog stop >>${ZLOG} 2>&1 || exit 1
		if umount --verbose ${ZRAM_LOG}/
		then
			echo "umount ${ZRAM_LOG}/" >>${ZLOG}
		else
		sleep .1
			invoke-rc.d rsyslog stop
			umount --verbose -l ${ZRAM_LOG}/ >>${ZLOG} 2>&1 
		fi
		if umount --verbose ${ZDIR}${ZRAM_DEV}/
		then
			echo "umount ${ZDIR}{ZRAM_DEV}/" >>${ZLOG}
		else
			umount --verbose -l ${ZDIR}{ZRAM_DEV}/ >>${ZLOG} 2>&1 
		fi
		if umount --verbose $HDD_LOG/
		then
			echo "umount $HDD_LOG/" >>${ZLOG}
		else
			sleep .1
			invoke-rc.d rsyslog stop
			umount --verbose -l $HDD_LOG/ >>${ZLOG} 2>&1
		fi
		invoke-rc.d rsyslog restart >>${ZLOG} 2>&1
		DEV_NUM=$(echo "$ZRAM_DEV" | tr -dc '0-9')
		if [ "$DEV_NUM" = "0" ]
		then
			rmmod zram
		else
			echo "$DEV_NUM" > /sys/class/zram-control/hot_remove
		fi
		;;

	*)
		echo "Usage: log2ram {start|stop}" >&2
		exit 1
		
esac
