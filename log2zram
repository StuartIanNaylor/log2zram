#!/bin/bash

. /etc/log2zram.conf

HDD_LOG=/var/hdd.log
PRUNE_LOG_LOG=/var/prune.log
ZRAM_LOG=/var/log

isSafe () {
	[ -d $HDD_LOG/ ] || echo "ERROR: $HDD_LOG/ doesn't exist! Can't sync." 
	[ -d $HDD_LOG/ ] || exit 1
}

syncToDisk () {
	isSafe
	cp -arvfu $ZRAM_LOG -T $HDD_LOG
}

syncFromDisk () {
	isSafe
	getUsage
	LOG_SIZE=$(du -sk $HDD_LOG/ | awk '{ print $1 }')
	if [ "$BYTES_AVAIL" -lt "$LOG_SIZE" ];then
		echo "ERROR: RAM disk too small. Can't sync." 
			cp -arvf $HDD_LOG -T $PRUNE_LOG
			rm -rf $HDD_LOG/oldlog/* 
			exit 1
	fi
	cp -arvf $HDD_LOG -T $ZRAM_LOG || exit 1
}



createZramLogDrive () {
	# Check Zram Class created
	if [ ! -d "/sys/class/zram-control" ]; then
		modprobe --verbose zram
		ZRAM_DEV='0'
	else
		ZRAM_DEV=$(cat /sys/class/zram-control/hot_add)
	fi
	echo ${COMP_ALG} > /sys/block/zram${ZRAM_DEV}/comp_algorithm
	echo ${LOG_DISK_SIZE} > /sys/block/zram${ZRAM_DEV}/disksize
	echo ${SIZE} > /sys/block/zram${ZRAM_DEV}/mem_limit
	mke2fs -v -t ext4 /dev/zram${ZRAM_DEV}
}

getUsage () {
	BYTES_AVAIL=$(df "/var/log" | tail -1 | awk '{ print $4 }')
	BYTES_USED=$(df "/var/log" | tail -1 | awk '{ print $3 }')
	
}


case "$1" in
	start)
		mount --verbose --bind $ZRAM_LOG/ $HDD_LOG/
		mount --verbose --make-private $HDD_LOG/
		createZramLogDrive
		mount --verbose --types ext4 -o nosuid,noexec,nodev /dev/zram${ZRAM_DEV} ${ZRAM_LOG}/
		sync
		syncFromDisk
		if [ ! -z "$LOGROTATE_FREQ" ]
		then
			mv -f /etc/cron.daily/logrotate /usr/local/bin/log2zram/logrotate
		fi
		nohup /usr/local/bin/log2zram/log2zram-schd > /dev/null 2>&1 &
		;;

	stop)
		kill $(cat /usr/local/bin/log2zram/log2zram-schd-pid)
		syncToDisk
		umount -l $ZRAM_LOG/
		umount -l $HDD_LOG/
		if [ ! -z "$LOGROTATE_FREQ" ]
		then
			cp /usr/local/bin/log2zram/logrotate /etc/cron.daily/logrotate
		fi
		;;
		
	write)
		echo 'log2zram: writeToHdd'  2>&1 | logger &
		cp -arvfu $ZRAM_LOG -T $HDD_LOG 2>&1 | logger &
		;;
		
	prune)
		echo 'log2zram: pruneOldlog'  2>&1 | logger &
		cp -arvfu $ZRAM_LOG -T $PRUNE_LOG 2>&1 | logger &
		rm -rf $ZRAM_LOG/oldlog/*
		;;

	*)
		echo "Usage: log2ram {start|stop|write|prune}" >&2
		exit 1
	;;
esac
